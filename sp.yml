---
- hosts: "{{ target | default('localhost') }}"
  become: no
  connection: ssh
  gather_facts: true

  vars_files:
    - "inventory/host_vars/all"
    - "inventory/group_vars/all"
    - "inventory/group_vars/{{ env }}/vars.yml"
    - "inventory/group_vars/{{ env }}/vault.yml"
    - "inventory/group_vars/{{ pop }}/vars.yml"
    - "inventory/group_vars/{{ pop }}/vault.yml"
    - "inventory/group_vars/{{ plat }}/vars.yml"
    - "inventory/group_vars/{{ plat }}/vault.yml"

  pre_tasks:
    - name: get my public IP
      ipify_facts:
      #validate_certs: no

  roles:
    - { role: update-os-pckgs, become: true }
    - { role: python, become: true }
    - { role: docker, become: true }
    - { role: sp, become: true }

  tasks:
    - name: check if SP is running
      uri:
        url: "http://{{ item }}"
      with_items:
        - "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
        - "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:25001"
        - "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}:4002/records/vnfr/vnf-instances"
      register: http_response

    - debug:
        msg: "{{ http_response.stdout }}" 
